#version 450 core
layout (location=0) in vec3 aPos;
layout (location=1) in vec3 aTexCoord;
layout (location=2) in vec3 aNormal;
out vec3 Normal;
out vec3 FragPos;
out vec2 TexCoord;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 NormalMatrix; // This is the inverse transpose of the model matrix
void main()
{
	gl_Position = projection * view * model * vec4(aPos, 1.0f);

	vec4 world_coord = vec4(model*vec4(aPos,1.0f));
	FragPos = vec3(world_coord.x, world_coord.y, world_coord.z);
	Normal = vec3(NormalMatrix * vec4(aNormal,0));
	TexCoord=aTexCoord;
	
}